/* Generated by Together */

package multimonster.common.setting;

import java.io.Serializable;

/**
 * two ways of using it:
 * - continuous domain, e.g. from 1 to 10
 * - discrete values, e.g. red or blue or green
 * 
 * the boolean value continuous determines the type of using 
 */
public class SettingDomain implements Serializable {
    private boolean continuous;
    private Comparable upperLimit;
    private Comparable lowerLimit;
    private Object[] discrete;
    
    public SettingDomain(int lower, int upper) {
    	this.upperLimit = new Integer(upper);
    	this.lowerLimit = new Integer(lower);
    	this.continuous = true;
    }
	/**
	 * @return
	 */
	public boolean isContinuous() {
		return continuous;
	}

	/**
	 * @return
	 */
	public Object[] getDiscrete() {
		return discrete;
	}

	/**
	 * @return
	 */
	public Comparable getLowerLimit() {
		return lowerLimit;
	}

	/**
	 * @return
	 */
	public Comparable getUpperLimit() {
		return upperLimit;
	}

	/**
	 * @param b
	 */
	public void setContinuous(boolean b) {
		continuous = b;
	}

	/**
	 * @param objects
	 */
	public void setDiscrete(Object[] objects) {
		discrete = objects;
	}

	/**
	 * @param comparable
	 */
	public void setLowerLimit(Comparable comparable) {
		lowerLimit = comparable;
	}

	/**
	 * @param comparable
	 */
	public void setUpperLimit(Comparable comparable) {
		upperLimit = comparable;
	}

}
